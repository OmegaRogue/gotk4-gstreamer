// Code generated by girgen. DO NOT EDIT.

package gstnet

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gio/v2"
)

// #include <stdlib.h>
// #include <gst/net/net.h>
import "C"

// NetUtilsSetSocketTos configures IP_TOS value of socket, i.e. sets QoS DSCP.
//
// The function takes the following parameters:
//
//    - socket: socket to configure.
//    - qosDscp: qoS DSCP value.
//
// The function returns the following values:
//
//    - ok: TRUE if successful, FALSE in case an error occurred.
//
func NetUtilsSetSocketTos(socket *gio.Socket, qosDscp int) bool {
	var _arg1 *C.GSocket // out
	var _arg2 C.gint     // out
	var _cret C.gboolean // in

	_arg1 = (*C.GSocket)(unsafe.Pointer(coreglib.InternObject(socket).Native()))
	_arg2 = C.gint(qosDscp)

	_cret = C.gst_net_utils_set_socket_tos(_arg1, _arg2)
	runtime.KeepAlive(socket)
	runtime.KeepAlive(qosDscp)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}
