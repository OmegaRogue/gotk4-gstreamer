// Code generated by girgen. DO NOT EDIT.

package gstvideo

import (
	"fmt"
	_ "runtime/cgo"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gstreamer-video-1.0 gstreamer-app-1.0
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <stdlib.h>
// #include <glib-object.h>
// #include <gst/video/video.h>
import "C"

// GType values.
var (
	GTypeVideoAncillaryDID = coreglib.Type(C.gst_video_ancillary_did_get_type())
	GTypeVideoGammaMode    = coreglib.Type(C.gst_video_gamma_mode_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeVideoAncillaryDID, F: marshalVideoAncillaryDID},
		coreglib.TypeMarshaler{T: GTypeVideoGammaMode, F: marshalVideoGammaMode},
	})
}

type VideoAncillaryDID C.gint

const (
	VideoAncillaryDidUndefined               VideoAncillaryDID = 0
	VideoAncillaryDidDeletion                VideoAncillaryDID = 128
	VideoAncillaryDidHanc3GAudioDataFirst    VideoAncillaryDID = 160
	VideoAncillaryDidHanc3GAudioDataLast     VideoAncillaryDID = 167
	VideoAncillaryDidHancHdtvAudioDataFirst  VideoAncillaryDID = 224
	VideoAncillaryDidHancHdtvAudioDataLast   VideoAncillaryDID = 231
	VideoAncillaryDidHancSdtvAudioData1First VideoAncillaryDID = 236
	VideoAncillaryDidHancSdtvAudioData1Last  VideoAncillaryDID = 239
	VideoAncillaryDidCameraPosition          VideoAncillaryDID = 240
	VideoAncillaryDidHancErrorDetection      VideoAncillaryDID = 244
	VideoAncillaryDidHancSdtvAudioData2First VideoAncillaryDID = 248
	VideoAncillaryDidHancSdtvAudioData2Last  VideoAncillaryDID = 255
)

func marshalVideoAncillaryDID(p uintptr) (interface{}, error) {
	return VideoAncillaryDID(coreglib.ValueFromNative(unsafe.Pointer(p)).Enum()), nil
}

// String returns the name in string for VideoAncillaryDID.
func (v VideoAncillaryDID) String() string {
	switch v {
	case VideoAncillaryDidUndefined:
		return "Undefined"
	case VideoAncillaryDidDeletion:
		return "Deletion"
	case VideoAncillaryDidHanc3GAudioDataFirst:
		return "Hanc3GAudioDataFirst"
	case VideoAncillaryDidHanc3GAudioDataLast:
		return "Hanc3GAudioDataLast"
	case VideoAncillaryDidHancHdtvAudioDataFirst:
		return "HancHdtvAudioDataFirst"
	case VideoAncillaryDidHancHdtvAudioDataLast:
		return "HancHdtvAudioDataLast"
	case VideoAncillaryDidHancSdtvAudioData1First:
		return "HancSdtvAudioData1First"
	case VideoAncillaryDidHancSdtvAudioData1Last:
		return "HancSdtvAudioData1Last"
	case VideoAncillaryDidCameraPosition:
		return "CameraPosition"
	case VideoAncillaryDidHancErrorDetection:
		return "HancErrorDetection"
	case VideoAncillaryDidHancSdtvAudioData2First:
		return "HancSdtvAudioData2First"
	case VideoAncillaryDidHancSdtvAudioData2Last:
		return "HancSdtvAudioData2Last"
	default:
		return fmt.Sprintf("VideoAncillaryDID(%d)", v)
	}
}

type VideoGammaMode C.gint

const (
	// VideoGammaModeNone: disable gamma handling.
	VideoGammaModeNone VideoGammaMode = iota
	// VideoGammaModeRemap: convert between input and output gamma Different
	// gamma conversion modes.
	VideoGammaModeRemap
)

func marshalVideoGammaMode(p uintptr) (interface{}, error) {
	return VideoGammaMode(coreglib.ValueFromNative(unsafe.Pointer(p)).Enum()), nil
}

// String returns the name in string for VideoGammaMode.
func (v VideoGammaMode) String() string {
	switch v {
	case VideoGammaModeNone:
		return "None"
	case VideoGammaModeRemap:
		return "Remap"
	default:
		return fmt.Sprintf("VideoGammaMode(%d)", v)
	}
}
