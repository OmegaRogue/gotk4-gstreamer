// Code generated by girgen. DO NOT EDIT.

package gstvideo

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
)

// #include <stdlib.h>
// #include <gst/video/video.h>
import "C"

// VideoCenterRect takes src rectangle and position it at the center of dst
// rectangle with or without scaling. It handles clipping if the src rectangle
// is bigger than the dst one and scaling is set to FALSE.
//
// The function takes the following parameters:
//
//    - src: pointer to VideoRectangle describing the source area.
//    - dst: pointer to VideoRectangle describing the destination area.
//    - scaling indicating if scaling should be applied or not.
//
// The function returns the following values:
//
//    - result: pointer to a VideoRectangle which will receive the result area.
//
func VideoCenterRect(src, dst *VideoRectangle, scaling bool) *VideoRectangle {
	var _arg1 *C.GstVideoRectangle // out
	var _arg2 *C.GstVideoRectangle // out
	var _arg3 C.GstVideoRectangle  // in
	var _arg4 C.gboolean           // out

	_arg1 = (*C.GstVideoRectangle)(gextras.StructNative(unsafe.Pointer(src)))
	_arg2 = (*C.GstVideoRectangle)(gextras.StructNative(unsafe.Pointer(dst)))
	if scaling {
		_arg4 = C.TRUE
	}

	C.gst_video_center_rect(_arg1, _arg2, &_arg3, _arg4)
	runtime.KeepAlive(src)
	runtime.KeepAlive(dst)
	runtime.KeepAlive(scaling)

	var _result *VideoRectangle // out

	_result = (*VideoRectangle)(gextras.NewStructNative(unsafe.Pointer((&_arg3))))

	return _result
}
