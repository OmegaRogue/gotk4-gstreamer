// Code generated by girgen. DO NOT EDIT.

package gstvideo

import (
	"fmt"
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gst/video/video.h>
// extern void _gotk4_gstvideo1_ColorBalance_ConnectValueChanged(gpointer, GstColorBalanceChannel*, gint, guintptr);
// GList* _gotk4_gstvideo1_ColorBalance_virtual_list_channels(void* fnptr, GstColorBalance* arg0) {
//   return ((GList* (*)(GstColorBalance*))(fnptr))(arg0);
// };
// GstColorBalanceType _gotk4_gstvideo1_ColorBalance_virtual_get_balance_type(void* fnptr, GstColorBalance* arg0) {
//   return ((GstColorBalanceType (*)(GstColorBalance*))(fnptr))(arg0);
// };
// gint _gotk4_gstvideo1_ColorBalance_virtual_get_value(void* fnptr, GstColorBalance* arg0, GstColorBalanceChannel* arg1) {
//   return ((gint (*)(GstColorBalance*, GstColorBalanceChannel*))(fnptr))(arg0, arg1);
// };
// void _gotk4_gstvideo1_ColorBalance_virtual_set_value(void* fnptr, GstColorBalance* arg0, GstColorBalanceChannel* arg1, gint arg2) {
//   ((void (*)(GstColorBalance*, GstColorBalanceChannel*, gint))(fnptr))(arg0, arg1, arg2);
// };
// void _gotk4_gstvideo1_ColorBalance_virtual_value_changed(void* fnptr, GstColorBalance* arg0, GstColorBalanceChannel* arg1, gint arg2) {
//   ((void (*)(GstColorBalance*, GstColorBalanceChannel*, gint))(fnptr))(arg0, arg1, arg2);
// };
import "C"

// GType values.
var (
	GTypeColorBalanceType = coreglib.Type(C.gst_color_balance_type_get_type())
	GTypeColorBalance     = coreglib.Type(C.gst_color_balance_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeColorBalanceType, F: marshalColorBalanceType},
		coreglib.TypeMarshaler{T: GTypeColorBalance, F: marshalColorBalance},
	})
}

// ColorBalanceType: enumeration indicating whether an element implements color
// balancing operations in software or in dedicated hardware. In general,
// dedicated hardware implementations (such as those provided by xvimagesink)
// are preferred.
type ColorBalanceType C.gint

const (
	// ColorBalanceHardware: color balance is implemented with dedicated
	// hardware.
	ColorBalanceHardware ColorBalanceType = iota
	// ColorBalanceSoftware: color balance is implemented via software
	// processing.
	ColorBalanceSoftware
)

func marshalColorBalanceType(p uintptr) (interface{}, error) {
	return ColorBalanceType(coreglib.ValueFromNative(unsafe.Pointer(p)).Enum()), nil
}

// String returns the name in string for ColorBalanceType.
func (c ColorBalanceType) String() string {
	switch c {
	case ColorBalanceHardware:
		return "Hardware"
	case ColorBalanceSoftware:
		return "Software"
	default:
		return fmt.Sprintf("ColorBalanceType(%d)", c)
	}
}

// ColorBalance: this interface is implemented by elements which can perform
// some color balance operation on video frames they process. For example,
// modifying the brightness, contrast, hue or saturation.
//
// Example elements are 'xvimagesink' and 'colorbalance'.
//
// ColorBalance wraps an interface. This means the user can get the
// underlying type by calling Cast().
type ColorBalance struct {
	_ [0]func() // equal guard
	*coreglib.Object
}

var (
	_ coreglib.Objector = (*ColorBalance)(nil)
)

// ColorBalancer describes ColorBalance's interface methods.
type ColorBalancer interface {
	coreglib.Objector

	// BalanceType: get the ColorBalanceType of this implementation.
	BalanceType() ColorBalanceType
	// Value: retrieve the current value of the indicated channel, between
	// min_value and max_value.
	Value(channel *ColorBalanceChannel) int
	// ListChannels: retrieve a list of the available channels.
	ListChannels() []*ColorBalanceChannel
	// SetValue sets the current value of the channel to the passed value, which
	// must be between min_value and max_value.
	SetValue(channel *ColorBalanceChannel, value int)
	// ValueChanged: helper function called by implementations of the
	// GstColorBalance interface.
	ValueChanged(channel *ColorBalanceChannel, value int)

	// Value-changed: fired when the value of the indicated channel has changed.
	ConnectValueChanged(func(channel *ColorBalanceChannel, value int)) coreglib.SignalHandle
}

var _ ColorBalancer = (*ColorBalance)(nil)

func wrapColorBalance(obj *coreglib.Object) *ColorBalance {
	return &ColorBalance{
		Object: obj,
	}
}

func marshalColorBalance(p uintptr) (interface{}, error) {
	return wrapColorBalance(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// ConnectValueChanged: fired when the value of the indicated channel has
// changed.
func (balance *ColorBalance) ConnectValueChanged(f func(channel *ColorBalanceChannel, value int)) coreglib.SignalHandle {
	return coreglib.ConnectGeneratedClosure(balance, "value-changed", false, unsafe.Pointer(C._gotk4_gstvideo1_ColorBalance_ConnectValueChanged), f)
}

// BalanceType: get the ColorBalanceType of this implementation.
//
// The function returns the following values:
//
//    - colorBalanceType: the ColorBalanceType.
//
func (balance *ColorBalance) BalanceType() ColorBalanceType {
	var _arg0 *C.GstColorBalance    // out
	var _cret C.GstColorBalanceType // in

	_arg0 = (*C.GstColorBalance)(unsafe.Pointer(coreglib.InternObject(balance).Native()))

	_cret = C.gst_color_balance_get_balance_type(_arg0)
	runtime.KeepAlive(balance)

	var _colorBalanceType ColorBalanceType // out

	_colorBalanceType = ColorBalanceType(_cret)

	return _colorBalanceType
}

// Value: retrieve the current value of the indicated channel, between min_value
// and max_value.
//
// See Also: The ColorBalanceChannel.min_value and ColorBalanceChannel.max_value
// members of the ColorBalanceChannel object.
//
// The function takes the following parameters:
//
//    - channel: ColorBalanceChannel instance.
//
// The function returns the following values:
//
//    - gint: current value of the channel.
//
func (balance *ColorBalance) Value(channel *ColorBalanceChannel) int {
	var _arg0 *C.GstColorBalance        // out
	var _arg1 *C.GstColorBalanceChannel // out
	var _cret C.gint                    // in

	_arg0 = (*C.GstColorBalance)(unsafe.Pointer(coreglib.InternObject(balance).Native()))
	_arg1 = (*C.GstColorBalanceChannel)(unsafe.Pointer(coreglib.InternObject(channel).Native()))

	_cret = C.gst_color_balance_get_value(_arg0, _arg1)
	runtime.KeepAlive(balance)
	runtime.KeepAlive(channel)

	var _gint int // out

	_gint = int(_cret)

	return _gint
}

// ListChannels: retrieve a list of the available channels.
//
// The function returns the following values:
//
//    - list: a GList containing pointers to ColorBalanceChannel objects. The
//      list is owned by the ColorBalance instance and must not be freed.
//
func (balance *ColorBalance) ListChannels() []*ColorBalanceChannel {
	var _arg0 *C.GstColorBalance // out
	var _cret *C.GList           // in

	_arg0 = (*C.GstColorBalance)(unsafe.Pointer(coreglib.InternObject(balance).Native()))

	_cret = C.gst_color_balance_list_channels(_arg0)
	runtime.KeepAlive(balance)

	var _list []*ColorBalanceChannel // out

	_list = make([]*ColorBalanceChannel, 0, gextras.ListSize(unsafe.Pointer(_cret)))
	gextras.MoveList(unsafe.Pointer(_cret), false, func(v unsafe.Pointer) {
		src := (*C.GstColorBalanceChannel)(v)
		var dst *ColorBalanceChannel // out
		dst = wrapColorBalanceChannel(coreglib.Take(unsafe.Pointer(src)))
		_list = append(_list, dst)
	})

	return _list
}

// SetValue sets the current value of the channel to the passed value, which
// must be between min_value and max_value.
//
// See Also: The ColorBalanceChannel.min_value and ColorBalanceChannel.max_value
// members of the ColorBalanceChannel object.
//
// The function takes the following parameters:
//
//    - channel: ColorBalanceChannel instance.
//    - value: new value for the channel.
//
func (balance *ColorBalance) SetValue(channel *ColorBalanceChannel, value int) {
	var _arg0 *C.GstColorBalance        // out
	var _arg1 *C.GstColorBalanceChannel // out
	var _arg2 C.gint                    // out

	_arg0 = (*C.GstColorBalance)(unsafe.Pointer(coreglib.InternObject(balance).Native()))
	_arg1 = (*C.GstColorBalanceChannel)(unsafe.Pointer(coreglib.InternObject(channel).Native()))
	_arg2 = C.gint(value)

	C.gst_color_balance_set_value(_arg0, _arg1, _arg2)
	runtime.KeepAlive(balance)
	runtime.KeepAlive(channel)
	runtime.KeepAlive(value)
}

// ValueChanged: helper function called by implementations of the
// GstColorBalance interface. It fires the ColorBalance::value-changed signal on
// the instance, and the ColorBalanceChannel::value-changed signal on the
// channel object.
//
// The function takes the following parameters:
//
//    - channel whose value has changed.
//    - value: new value of the channel.
//
func (balance *ColorBalance) ValueChanged(channel *ColorBalanceChannel, value int) {
	var _arg0 *C.GstColorBalance        // out
	var _arg1 *C.GstColorBalanceChannel // out
	var _arg2 C.gint                    // out

	_arg0 = (*C.GstColorBalance)(unsafe.Pointer(coreglib.InternObject(balance).Native()))
	_arg1 = (*C.GstColorBalanceChannel)(unsafe.Pointer(coreglib.InternObject(channel).Native()))
	_arg2 = C.gint(value)

	C.gst_color_balance_value_changed(_arg0, _arg1, _arg2)
	runtime.KeepAlive(balance)
	runtime.KeepAlive(channel)
	runtime.KeepAlive(value)
}

// balanceType: get the ColorBalanceType of this implementation.
//
// The function returns the following values:
//
//    - colorBalanceType: the ColorBalanceType.
//
func (balance *ColorBalance) balanceType() ColorBalanceType {
	gclass := (*C.GstColorBalanceInterface)(coreglib.PeekParentClass(balance))
	fnarg := gclass.get_balance_type

	var _arg0 *C.GstColorBalance    // out
	var _cret C.GstColorBalanceType // in

	_arg0 = (*C.GstColorBalance)(unsafe.Pointer(coreglib.InternObject(balance).Native()))

	_cret = C._gotk4_gstvideo1_ColorBalance_virtual_get_balance_type(unsafe.Pointer(fnarg), _arg0)
	runtime.KeepAlive(balance)

	var _colorBalanceType ColorBalanceType // out

	_colorBalanceType = ColorBalanceType(_cret)

	return _colorBalanceType
}

// Value: retrieve the current value of the indicated channel, between min_value
// and max_value.
//
// See Also: The ColorBalanceChannel.min_value and ColorBalanceChannel.max_value
// members of the ColorBalanceChannel object.
//
// The function takes the following parameters:
//
//    - channel: ColorBalanceChannel instance.
//
// The function returns the following values:
//
//    - gint: current value of the channel.
//
func (balance *ColorBalance) value(channel *ColorBalanceChannel) int {
	gclass := (*C.GstColorBalanceInterface)(coreglib.PeekParentClass(balance))
	fnarg := gclass.get_value

	var _arg0 *C.GstColorBalance        // out
	var _arg1 *C.GstColorBalanceChannel // out
	var _cret C.gint                    // in

	_arg0 = (*C.GstColorBalance)(unsafe.Pointer(coreglib.InternObject(balance).Native()))
	_arg1 = (*C.GstColorBalanceChannel)(unsafe.Pointer(coreglib.InternObject(channel).Native()))

	_cret = C._gotk4_gstvideo1_ColorBalance_virtual_get_value(unsafe.Pointer(fnarg), _arg0, _arg1)
	runtime.KeepAlive(balance)
	runtime.KeepAlive(channel)

	var _gint int // out

	_gint = int(_cret)

	return _gint
}

// listChannels: retrieve a list of the available channels.
//
// The function returns the following values:
//
//    - list: a GList containing pointers to ColorBalanceChannel objects. The
//      list is owned by the ColorBalance instance and must not be freed.
//
func (balance *ColorBalance) listChannels() []*ColorBalanceChannel {
	gclass := (*C.GstColorBalanceInterface)(coreglib.PeekParentClass(balance))
	fnarg := gclass.list_channels

	var _arg0 *C.GstColorBalance // out
	var _cret *C.GList           // in

	_arg0 = (*C.GstColorBalance)(unsafe.Pointer(coreglib.InternObject(balance).Native()))

	_cret = C._gotk4_gstvideo1_ColorBalance_virtual_list_channels(unsafe.Pointer(fnarg), _arg0)
	runtime.KeepAlive(balance)

	var _list []*ColorBalanceChannel // out

	_list = make([]*ColorBalanceChannel, 0, gextras.ListSize(unsafe.Pointer(_cret)))
	gextras.MoveList(unsafe.Pointer(_cret), false, func(v unsafe.Pointer) {
		src := (*C.GstColorBalanceChannel)(v)
		var dst *ColorBalanceChannel // out
		dst = wrapColorBalanceChannel(coreglib.Take(unsafe.Pointer(src)))
		_list = append(_list, dst)
	})

	return _list
}

// setValue sets the current value of the channel to the passed value, which
// must be between min_value and max_value.
//
// See Also: The ColorBalanceChannel.min_value and ColorBalanceChannel.max_value
// members of the ColorBalanceChannel object.
//
// The function takes the following parameters:
//
//    - channel: ColorBalanceChannel instance.
//    - value: new value for the channel.
//
func (balance *ColorBalance) setValue(channel *ColorBalanceChannel, value int) {
	gclass := (*C.GstColorBalanceInterface)(coreglib.PeekParentClass(balance))
	fnarg := gclass.set_value

	var _arg0 *C.GstColorBalance        // out
	var _arg1 *C.GstColorBalanceChannel // out
	var _arg2 C.gint                    // out

	_arg0 = (*C.GstColorBalance)(unsafe.Pointer(coreglib.InternObject(balance).Native()))
	_arg1 = (*C.GstColorBalanceChannel)(unsafe.Pointer(coreglib.InternObject(channel).Native()))
	_arg2 = C.gint(value)

	C._gotk4_gstvideo1_ColorBalance_virtual_set_value(unsafe.Pointer(fnarg), _arg0, _arg1, _arg2)
	runtime.KeepAlive(balance)
	runtime.KeepAlive(channel)
	runtime.KeepAlive(value)
}

// valueChanged: helper function called by implementations of the
// GstColorBalance interface. It fires the ColorBalance::value-changed signal on
// the instance, and the ColorBalanceChannel::value-changed signal on the
// channel object.
//
// The function takes the following parameters:
//
//    - channel whose value has changed.
//    - value: new value of the channel.
//
func (balance *ColorBalance) valueChanged(channel *ColorBalanceChannel, value int) {
	gclass := (*C.GstColorBalanceInterface)(coreglib.PeekParentClass(balance))
	fnarg := gclass.value_changed

	var _arg0 *C.GstColorBalance        // out
	var _arg1 *C.GstColorBalanceChannel // out
	var _arg2 C.gint                    // out

	_arg0 = (*C.GstColorBalance)(unsafe.Pointer(coreglib.InternObject(balance).Native()))
	_arg1 = (*C.GstColorBalanceChannel)(unsafe.Pointer(coreglib.InternObject(channel).Native()))
	_arg2 = C.gint(value)

	C._gotk4_gstvideo1_ColorBalance_virtual_value_changed(unsafe.Pointer(fnarg), _arg0, _arg1, _arg2)
	runtime.KeepAlive(balance)
	runtime.KeepAlive(channel)
	runtime.KeepAlive(value)
}

// ColorBalanceInterface: color-balance interface.
//
// An instance of this type is always passed by reference.
type ColorBalanceInterface struct {
	*colorBalanceInterface
}

// colorBalanceInterface is the struct that's finalized.
type colorBalanceInterface struct {
	native *C.GstColorBalanceInterface
}
