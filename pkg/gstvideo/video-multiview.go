// Code generated by girgen. DO NOT EDIT.

package gstvideo

import (
	"unsafe"

	"github.com/OmegaRogue/gotk4-gstreamer/pkg/gst"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gst/video/video.h>
import "C"

// GType values.
var (
	GTypeVideoMultiviewFlagsSet = coreglib.Type(C.gst_video_multiview_flagset_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeVideoMultiviewFlagsSet, F: marshalVideoMultiviewFlagsSet},
	})
}

// VideoMultiviewFlagsSet: see VideoMultiviewFlags.
type VideoMultiviewFlagsSet struct {
	_ [0]func() // equal guard
	gst.FlagSet
}

var (
	_ coreglib.Objector = (*VideoMultiviewFlagsSet)(nil)
)

func wrapVideoMultiviewFlagsSet(obj *coreglib.Object) *VideoMultiviewFlagsSet {
	return &VideoMultiviewFlagsSet{
		FlagSet: gst.FlagSet{
			Object: obj,
		},
	}
}

func marshalVideoMultiviewFlagsSet(p uintptr) (interface{}, error) {
	return wrapVideoMultiviewFlagsSet(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}
