// Code generated by girgen. DO NOT EDIT.

package gstvideo

import (
	"runtime"
	"unsafe"

	"github.com/OmegaRogue/gotk4-gstreamer/pkg/gst"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gst/video/video.h>
import "C"

// BufferAddVideoCodecAlphaMeta attaches a VideoCodecAlphaMeta metadata to
// buffer with the given alpha buffer.
//
// The function takes the following parameters:
//
//    - buffer: Buffer.
//    - alphaBuffer: Buffer.
//
// The function returns the following values:
//
//    - videoCodecAlphaMeta on buffer.
//
func BufferAddVideoCodecAlphaMeta(buffer, alphaBuffer *gst.Buffer) *VideoCodecAlphaMeta {
	var _arg1 *C.GstBuffer              // out
	var _arg2 *C.GstBuffer              // out
	var _cret *C.GstVideoCodecAlphaMeta // in

	_arg1 = (*C.GstBuffer)(gextras.StructNative(unsafe.Pointer(buffer)))
	_arg2 = (*C.GstBuffer)(gextras.StructNative(unsafe.Pointer(alphaBuffer)))
	runtime.SetFinalizer(gextras.StructIntern(unsafe.Pointer(alphaBuffer)), nil)

	_cret = C.gst_buffer_add_video_codec_alpha_meta(_arg1, _arg2)
	runtime.KeepAlive(buffer)
	runtime.KeepAlive(alphaBuffer)

	var _videoCodecAlphaMeta *VideoCodecAlphaMeta // out

	_videoCodecAlphaMeta = (*VideoCodecAlphaMeta)(gextras.NewStructNative(unsafe.Pointer(_cret)))

	return _videoCodecAlphaMeta
}

// The function returns the following values:
//
//    - gType for the VideoCodecAlphaMeta structure.
//
func VideoCodecAlphaMetaApiGetType() coreglib.Type {
	var _cret C.GType // in

	_cret = C.gst_video_codec_alpha_meta_api_get_type()

	var _gType coreglib.Type // out

	_gType = coreglib.Type(_cret)

	return _gType
}

// VideoCodecAlphaMeta: this meta is primarily for internal use in GStreamer
// elements to support VP8/VP9 transparent video stored into WebM or Matroska
// containers, or transparent static AV1 images. Nothing prevents you from using
// this meta for custom purposes, but it generally can't be used to easily to
// add support for alpha channels to CODECs or formats that don't support that
// out of the box.
//
// An instance of this type is always passed by reference.
type VideoCodecAlphaMeta struct {
	*videoCodecAlphaMeta
}

// videoCodecAlphaMeta is the struct that's finalized.
type videoCodecAlphaMeta struct {
	native *C.GstVideoCodecAlphaMeta
}

// Meta: parent Meta.
func (v *VideoCodecAlphaMeta) Meta() *gst.Meta {
	valptr := &v.native.meta
	var _v *gst.Meta // out
	_v = (*gst.Meta)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}

// Buffer: encoded alpha frame.
func (v *VideoCodecAlphaMeta) Buffer() *gst.Buffer {
	valptr := &v.native.buffer
	var _v *gst.Buffer // out
	_v = (*gst.Buffer)(gextras.NewStructNative(unsafe.Pointer(*valptr)))
	return _v
}

// The function returns the following values:
//
//    - metaInfo pointer that describes VideoCodecAlphaMeta.
//
func VideoCodecAlphaMetaGetInfo() *gst.MetaInfo {
	var _cret *C.GstMetaInfo // in

	_cret = C.gst_video_codec_alpha_meta_get_info()

	var _metaInfo *gst.MetaInfo // out

	_metaInfo = (*gst.MetaInfo)(gextras.NewStructNative(unsafe.Pointer(_cret)))

	return _metaInfo
}
