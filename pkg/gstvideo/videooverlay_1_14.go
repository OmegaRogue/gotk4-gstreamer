// Code generated by girgen. DO NOT EDIT.

package gstvideo

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gst/video/video.h>
import "C"

// VideoOverlaySetProperty: this helper shall be used by classes implementing
// the VideoOverlay interface that want the render rectangle to be controllable
// using properties. This helper will parse and set the render rectangle calling
// gst_video_overlay_set_render_rectangle().
//
// The function takes the following parameters:
//
//    - object: instance on which the property is set.
//    - lastPropId: highest property ID.
//    - propertyId: property ID.
//    - value to be set.
//
// The function returns the following values:
//
//    - ok: TRUE if the property_id matches the GstVideoOverlay property.
//
func VideoOverlaySetProperty(object *coreglib.Object, lastPropId int, propertyId uint, value *coreglib.Value) bool {
	var _arg1 *C.GObject // out
	var _arg2 C.gint     // out
	var _arg3 C.guint    // out
	var _arg4 *C.GValue  // out
	var _cret C.gboolean // in

	_arg1 = (*C.GObject)(unsafe.Pointer(object.Native()))
	_arg2 = C.gint(lastPropId)
	_arg3 = C.guint(propertyId)
	_arg4 = (*C.GValue)(unsafe.Pointer(value.Native()))

	_cret = C.gst_video_overlay_set_property(_arg1, _arg2, _arg3, _arg4)
	runtime.KeepAlive(object)
	runtime.KeepAlive(lastPropId)
	runtime.KeepAlive(propertyId)
	runtime.KeepAlive(value)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}
