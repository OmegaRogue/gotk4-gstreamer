// Code generated by girgen. DO NOT EDIT.

package gstgl

import (
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gst/gl/gl.h>
import "C"

//export _gotk4_gstgl1_GLWindow_ConnectKeyEvent
func _gotk4_gstgl1_GLWindow_ConnectKeyEvent(arg0 C.gpointer, arg1 *C.gchar, arg2 *C.gchar, arg3 C.guintptr) {
	var f func(id, key string)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg3))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(id, key string))
	}

	var _id string  // out
	var _key string // out

	_id = C.GoString((*C.gchar)(unsafe.Pointer(arg1)))
	_key = C.GoString((*C.gchar)(unsafe.Pointer(arg2)))

	f(_id, _key)
}

//export _gotk4_gstgl1_GLWindow_ConnectMouseEvent
func _gotk4_gstgl1_GLWindow_ConnectMouseEvent(arg0 C.gpointer, arg1 *C.gchar, arg2 C.gint, arg3 C.gdouble, arg4 C.gdouble, arg5 C.guintptr) {
	var f func(id string, button int, x, y float64)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg5))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(id string, button int, x, y float64))
	}

	var _id string  // out
	var _button int // out
	var _x float64  // out
	var _y float64  // out

	_id = C.GoString((*C.gchar)(unsafe.Pointer(arg1)))
	_button = int(arg2)
	_x = float64(arg3)
	_y = float64(arg4)

	f(_id, _button, _x, _y)
}

//export _gotk4_gstgl1_GLWindow_ConnectScrollEvent
func _gotk4_gstgl1_GLWindow_ConnectScrollEvent(arg0 C.gpointer, arg1 C.gdouble, arg2 C.gdouble, arg3 C.gdouble, arg4 C.gdouble, arg5 C.guintptr) {
	var f func(x, y, deltaX, deltaY float64)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg5))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(x, y, deltaX, deltaY float64))
	}

	var _x float64      // out
	var _y float64      // out
	var _deltaX float64 // out
	var _deltaY float64 // out

	_x = float64(arg1)
	_y = float64(arg2)
	_deltaX = float64(arg3)
	_deltaY = float64(arg4)

	f(_x, _y, _deltaX, _deltaY)
}

//export _gotk4_gstgl1_GLWindow_ConnectWindowHandleChanged
func _gotk4_gstgl1_GLWindow_ConnectWindowHandleChanged(arg0 C.gpointer, arg1 C.guintptr) {
	var f func()
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg1))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func())
	}

	f()
}
