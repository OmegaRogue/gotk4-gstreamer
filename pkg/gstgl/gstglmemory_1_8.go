// Code generated by girgen. DO NOT EDIT.

package gstgl

import (
	"runtime"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gst/gl/gl.h>
import "C"

// The function takes the following parameters:
//
//    - context: GLContext.
//
// The function returns the following values:
//
//    - glMemoryAllocator: default GLMemoryAllocator supported by context.
//
func GLMemoryAllocatorGetDefault(context GLContexter) *GLMemoryAllocator {
	var _arg1 *C.GstGLContext         // out
	var _cret *C.GstGLMemoryAllocator // in

	_arg1 = (*C.GstGLContext)(unsafe.Pointer(coreglib.InternObject(context).Native()))

	_cret = C.gst_gl_memory_allocator_get_default(_arg1)
	runtime.KeepAlive(context)

	var _glMemoryAllocator *GLMemoryAllocator // out

	_glMemoryAllocator = wrapGLMemoryAllocator(coreglib.AssumeOwnership(unsafe.Pointer(_cret)))

	return _glMemoryAllocator
}
