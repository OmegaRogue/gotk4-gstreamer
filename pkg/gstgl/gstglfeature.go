// Code generated by girgen. DO NOT EDIT.

package gstgl

import (
	"runtime"
	"unsafe"
)

// #include <stdlib.h>
// #include <gst/gl/gl.h>
import "C"

// The function takes the following parameters:
//
//    - name: extension to search for.
//    - ext: list of possible extensions.
//
// The function returns the following values:
//
//    - ok: whether name is in the space separated list of ext.
//
func GLCheckExtension(name, ext string) bool {
	var _arg1 *C.char    // out
	var _arg2 *C.gchar   // out
	var _cret C.gboolean // in

	_arg1 = (*C.char)(unsafe.Pointer(C.CString(name)))
	defer C.free(unsafe.Pointer(_arg1))
	_arg2 = (*C.gchar)(unsafe.Pointer(C.CString(ext)))
	defer C.free(unsafe.Pointer(_arg2))

	_cret = C.gst_gl_check_extension(_arg1, _arg2)
	runtime.KeepAlive(name)
	runtime.KeepAlive(ext)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}
