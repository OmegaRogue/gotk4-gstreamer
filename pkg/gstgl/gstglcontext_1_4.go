// Code generated by girgen. DO NOT EDIT.

package gstgl

import (
	"runtime"
	"unsafe"
)

// #include <stdlib.h>
// #include <gst/gl/gl.h>
import "C"

// GLContextDefaultGetProcAddress: default implementation of the various
// GetProcAddress functions that looks for name in the OpenGL shared libraries
// or in the current process.
//
// See also: gst_gl_context_get_proc_address().
//
// The function takes the following parameters:
//
//    - glApi: GLAPI.
//    - name: then function to get the address of.
//
// The function returns the following values:
//
//    - gpointer (optional) address pointing to name or NULL.
//
func GLContextDefaultGetProcAddress(glApi GLAPI, name string) unsafe.Pointer {
	var _arg1 C.GstGLAPI // out
	var _arg2 *C.gchar   // out
	var _cret C.gpointer // in

	_arg1 = C.GstGLAPI(glApi)
	_arg2 = (*C.gchar)(unsafe.Pointer(C.CString(name)))
	defer C.free(unsafe.Pointer(_arg2))

	_cret = C.gst_gl_context_default_get_proc_address(_arg1, _arg2)
	runtime.KeepAlive(glApi)
	runtime.KeepAlive(name)

	var _gpointer unsafe.Pointer // out

	_gpointer = (unsafe.Pointer)(unsafe.Pointer(_cret))

	return _gpointer
}
