// Code generated by girgen. DO NOT EDIT.

package gstgl

import (
	"fmt"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gst/gl/gl.h>
import "C"

// GType values.
var (
	GTypeGLTextureTarget = coreglib.Type(C.gst_gl_texture_target_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeGLTextureTarget, F: marshalGLTextureTarget},
	})
}

// GLTextureTarget: openGL texture target that an OpenGL texture can be bound
// to. The gst_gl_value_set_texture_target_from_mask(),
// gst_gl_value_get_texture_target_mask(), and gst_gl_value_set_texture_target()
// functions can be used for handling texture targets with #GValue's when e.g.
// dealing with Caps.
type GLTextureTarget C.gint

const (
	// GLTextureTargetNone: no texture target.
	GLTextureTargetNone GLTextureTarget = iota
	// GLTextureTarget2D: 2D texture target (GL_TEXTURE_2D).
	GLTextureTarget2D
	// GLTextureTargetRectangle: rectangle texture target
	// (GL_TEXTURE_RECTANGLE).
	GLTextureTargetRectangle
	// GLTextureTargetExternalOes: external oes texture target
	// (GL_TEXTURE_EXTERNAL_OES).
	GLTextureTargetExternalOes
)

func marshalGLTextureTarget(p uintptr) (interface{}, error) {
	return GLTextureTarget(coreglib.ValueFromNative(unsafe.Pointer(p)).Enum()), nil
}

// String returns the name in string for GLTextureTarget.
func (g GLTextureTarget) String() string {
	switch g {
	case GLTextureTargetNone:
		return "None"
	case GLTextureTarget2D:
		return "2D"
	case GLTextureTargetRectangle:
		return "Rectangle"
	case GLTextureTargetExternalOes:
		return "ExternalOes"
	default:
		return fmt.Sprintf("GLTextureTarget(%d)", g)
	}
}
