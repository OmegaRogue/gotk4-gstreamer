// Code generated by girgen. DO NOT EDIT.

package gstbase

import (
	"unsafe"

	"github.com/OmegaRogue/gotk4-gstreamer/pkg/gst"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <gst/base/base.h>
import "C"

//export _gotk4_gstbase1_Aggregator_ConnectSamplesSelected
func _gotk4_gstbase1_Aggregator_ConnectSamplesSelected(arg0 C.gpointer, arg1 *C.GstSegment, arg2 C.guint64, arg3 C.guint64, arg4 C.guint64, arg5 *C.GstStructure, arg6 C.guintptr) {
	var f func(segment *gst.Segment, pts, dts, duration uint64, info *gst.Structure)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg6))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(segment *gst.Segment, pts, dts, duration uint64, info *gst.Structure))
	}

	var _segment *gst.Segment // out
	var _pts uint64           // out
	var _dts uint64           // out
	var _duration uint64      // out
	var _info *gst.Structure  // out

	_segment = (*gst.Segment)(gextras.NewStructNative(unsafe.Pointer(arg1)))
	_pts = uint64(arg2)
	_dts = uint64(arg3)
	_duration = uint64(arg4)
	if arg5 != nil {
		_info = (*gst.Structure)(gextras.NewStructNative(unsafe.Pointer(arg5)))
	}

	f(_segment, _pts, _dts, _duration, _info)
}
