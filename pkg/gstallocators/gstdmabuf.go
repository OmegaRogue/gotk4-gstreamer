// Code generated by girgen. DO NOT EDIT.

package gstallocators

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
)

// #include <stdlib.h>
// #include <gst/allocators/allocators.h>
import "C"

const ALLOCATOR_DMABUF = "dmabuf"

// DmaBufAllocatorClass: instance of this type is always passed by reference.
type DmaBufAllocatorClass struct {
	*dmaBufAllocatorClass
}

// dmaBufAllocatorClass is the struct that's finalized.
type dmaBufAllocatorClass struct {
	native *C.GstDmaBufAllocatorClass
}

func (d *DmaBufAllocatorClass) ParentClass() *FdAllocatorClass {
	valptr := &d.native.parent_class
	var _v *FdAllocatorClass // out
	_v = (*FdAllocatorClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
