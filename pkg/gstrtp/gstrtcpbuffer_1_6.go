// Code generated by girgen. DO NOT EDIT.

package gstrtp

import (
	"runtime"
	"unsafe"

	"github.com/OmegaRogue/gotk4-gstreamer/pkg/gst"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
)

// #include <stdlib.h>
// #include <gst/rtp/rtp.h>
import "C"

// RTCPBufferValidateDataReduced: check if the data and size point to the data
// of a valid RTCP packet. Use this function to validate a packet before using
// the other functions in this module.
//
// This function is updated to support reduced size rtcp packets according to
// RFC 5506 and will validate full compound RTCP packets as well as reduced size
// RTCP packets.
//
// The function takes the following parameters:
//
//    - data to validate.
//
// The function returns the following values:
//
//    - ok: TRUE if the data points to a valid RTCP packet.
//
func RTCPBufferValidateDataReduced(data []byte) bool {
	var _arg1 *C.guint8 // out
	var _arg2 C.guint
	var _cret C.gboolean // in

	_arg2 = (C.guint)(len(data))
	if len(data) > 0 {
		_arg1 = (*C.guint8)(unsafe.Pointer(&data[0]))
	}

	_cret = C.gst_rtcp_buffer_validate_data_reduced(_arg1, _arg2)
	runtime.KeepAlive(data)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// RTCPBufferValidateReduced: check if the data pointed to by buffer is a valid
// RTCP packet using gst_rtcp_buffer_validate_reduced().
//
// The function takes the following parameters:
//
//    - buffer to validate.
//
// The function returns the following values:
//
//    - ok: TRUE if buffer is a valid RTCP packet.
//
func RTCPBufferValidateReduced(buffer *gst.Buffer) bool {
	var _arg1 *C.GstBuffer // out
	var _cret C.gboolean   // in

	_arg1 = (*C.GstBuffer)(gextras.StructNative(unsafe.Pointer(buffer)))

	_cret = C.gst_rtcp_buffer_validate_reduced(_arg1)
	runtime.KeepAlive(buffer)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}
