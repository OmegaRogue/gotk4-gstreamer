// Code generated by girgen. DO NOT EDIT.

package gstpbutils

import (
	"unsafe"
)

// #include <stdlib.h>
// #include <gst/pbutils/pbutils.h>
import "C"

// PLUGINS_BASE_VERSION_MAJOR: major version of GStreamer's gst-plugins-base
// libraries at compile time.
const PLUGINS_BASE_VERSION_MAJOR = 1

// PLUGINS_BASE_VERSION_MICRO: micro version of GStreamer's gst-plugins-base
// libraries at compile time.
const PLUGINS_BASE_VERSION_MICRO = 3

// PLUGINS_BASE_VERSION_MINOR: minor version of GStreamer's gst-plugins-base
// libraries at compile time.
const PLUGINS_BASE_VERSION_MINOR = 20

// PLUGINS_BASE_VERSION_NANO: nano version of GStreamer's gst-plugins-base
// libraries at compile time. Actual releases have 0, GIT versions have 1,
// prerelease versions have 2-...
const PLUGINS_BASE_VERSION_NANO = 0

// PluginsBaseVersion gets the version number of the GStreamer Plugins Base
// libraries.
//
// The function returns the following values:
//
//    - major: pointer to a guint to store the major version number, or NULL.
//    - minor: pointer to a guint to store the minor version number, or NULL.
//    - micro: pointer to a guint to store the micro version number, or NULL.
//    - nano: pointer to a guint to store the nano version number, or NULL.
//
func PluginsBaseVersion() (major, minor, micro, nano uint) {
	var _arg1 C.guint // in
	var _arg2 C.guint // in
	var _arg3 C.guint // in
	var _arg4 C.guint // in

	C.gst_plugins_base_version(&_arg1, &_arg2, &_arg3, &_arg4)

	var _major uint // out
	var _minor uint // out
	var _micro uint // out
	var _nano uint  // out

	_major = uint(_arg1)
	_minor = uint(_arg2)
	_micro = uint(_arg3)
	_nano = uint(_arg4)

	return _major, _minor, _micro, _nano
}

// PluginsBaseVersionString: this function returns a string that is useful for
// describing this version of GStreamer's gst-plugins-base libraries to the
// outside world: user agent strings, logging, about dialogs ...
//
// The function returns the following values:
//
//    - utf8: newly allocated string describing this version of gst-plugins-base.
//
func PluginsBaseVersionString() string {
	var _cret *C.gchar // in

	_cret = C.gst_plugins_base_version_string()

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}
