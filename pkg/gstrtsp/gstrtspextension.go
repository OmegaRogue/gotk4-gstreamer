// Code generated by girgen. DO NOT EDIT.

package gstrtsp

import (
	"runtime"
	"unsafe"

	"github.com/OmegaRogue/gotk4-gstreamer/pkg/gst"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gst/rtsp/rtsp.h>
// extern GstRTSPResult _gotk4_gstrtsp1_RTSPExtension_ConnectSend(gpointer, gpointer, gpointer, guintptr);
// GstRTSPResult _gotk4_gstrtsp1_RTSPExtension_virtual_after_send(void* fnptr, GstRTSPExtension* arg0, GstRTSPMessage* arg1, GstRTSPMessage* arg2) {
//   return ((GstRTSPResult (*)(GstRTSPExtension*, GstRTSPMessage*, GstRTSPMessage*))(fnptr))(arg0, arg1, arg2);
// };
// GstRTSPResult _gotk4_gstrtsp1_RTSPExtension_virtual_before_send(void* fnptr, GstRTSPExtension* arg0, GstRTSPMessage* arg1) {
//   return ((GstRTSPResult (*)(GstRTSPExtension*, GstRTSPMessage*))(fnptr))(arg0, arg1);
// };
// GstRTSPResult _gotk4_gstrtsp1_RTSPExtension_virtual_receive_request(void* fnptr, GstRTSPExtension* arg0, GstRTSPMessage* arg1) {
//   return ((GstRTSPResult (*)(GstRTSPExtension*, GstRTSPMessage*))(fnptr))(arg0, arg1);
// };
// GstRTSPResult _gotk4_gstrtsp1_RTSPExtension_virtual_send(void* fnptr, GstRTSPExtension* arg0, GstRTSPMessage* arg1, GstRTSPMessage* arg2) {
//   return ((GstRTSPResult (*)(GstRTSPExtension*, GstRTSPMessage*, GstRTSPMessage*))(fnptr))(arg0, arg1, arg2);
// };
// GstRTSPResult _gotk4_gstrtsp1_RTSPExtension_virtual_stream_select(void* fnptr, GstRTSPExtension* arg0, GstRTSPUrl* arg1) {
//   return ((GstRTSPResult (*)(GstRTSPExtension*, GstRTSPUrl*))(fnptr))(arg0, arg1);
// };
// gboolean _gotk4_gstrtsp1_RTSPExtension_virtual_configure_stream(void* fnptr, GstRTSPExtension* arg0, GstCaps* arg1) {
//   return ((gboolean (*)(GstRTSPExtension*, GstCaps*))(fnptr))(arg0, arg1);
// };
// gboolean _gotk4_gstrtsp1_RTSPExtension_virtual_detect_server(void* fnptr, GstRTSPExtension* arg0, GstRTSPMessage* arg1) {
//   return ((gboolean (*)(GstRTSPExtension*, GstRTSPMessage*))(fnptr))(arg0, arg1);
// };
import "C"

// GType values.
var (
	GTypeRTSPExtension = coreglib.Type(C.gst_rtsp_extension_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeRTSPExtension, F: marshalRTSPExtension},
	})
}

// RTSPExtension: this interface is implemented e.g. by the Windows Media
// Streaming RTSP exentension (rtspwms) and the RealMedia RTSP extension
// (rtspreal).
//
// RTSPExtension wraps an interface. This means the user can get the
// underlying type by calling Cast().
type RTSPExtension struct {
	_ [0]func() // equal guard
	*coreglib.Object
}

var (
	_ coreglib.Objector = (*RTSPExtension)(nil)
)

// RTSPExtensioner describes RTSPExtension's interface methods.
type RTSPExtensioner interface {
	coreglib.Objector

	AfterSend(req, resp *RTSPMessage) RTSPResult
	BeforeSend(req *RTSPMessage) RTSPResult
	ConfigureStream(caps *gst.Caps) bool
	DetectServer(resp *RTSPMessage) bool
	ReceiveRequest(req *RTSPMessage) RTSPResult
	Send(req, resp *RTSPMessage) RTSPResult
	StreamSelect(url *RTSPURL) RTSPResult

	ConnectSend(func(object, p0 unsafe.Pointer) (rtspResult RTSPResult)) coreglib.SignalHandle
}

var _ RTSPExtensioner = (*RTSPExtension)(nil)

func wrapRTSPExtension(obj *coreglib.Object) *RTSPExtension {
	return &RTSPExtension{
		Object: obj,
	}
}

func marshalRTSPExtension(p uintptr) (interface{}, error) {
	return wrapRTSPExtension(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

func (ext *RTSPExtension) ConnectSend(f func(object, p0 unsafe.Pointer) (rtspResult RTSPResult)) coreglib.SignalHandle {
	return coreglib.ConnectGeneratedClosure(ext, "send", false, unsafe.Pointer(C._gotk4_gstrtsp1_RTSPExtension_ConnectSend), f)
}

// The function takes the following parameters:
//
//    - req
//    - resp
//
// The function returns the following values:
//
func (ext *RTSPExtension) AfterSend(req, resp *RTSPMessage) RTSPResult {
	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstRTSPMessage   // out
	var _arg2 *C.GstRTSPMessage   // out
	var _cret C.GstRTSPResult     // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(req)))
	_arg2 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(resp)))

	_cret = C.gst_rtsp_extension_after_send(_arg0, _arg1, _arg2)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(req)
	runtime.KeepAlive(resp)

	var _rtspResult RTSPResult // out

	_rtspResult = RTSPResult(_cret)

	return _rtspResult
}

// The function takes the following parameters:
//
// The function returns the following values:
//
func (ext *RTSPExtension) BeforeSend(req *RTSPMessage) RTSPResult {
	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstRTSPMessage   // out
	var _cret C.GstRTSPResult     // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(req)))

	_cret = C.gst_rtsp_extension_before_send(_arg0, _arg1)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(req)

	var _rtspResult RTSPResult // out

	_rtspResult = RTSPResult(_cret)

	return _rtspResult
}

// The function takes the following parameters:
//
// The function returns the following values:
//
func (ext *RTSPExtension) ConfigureStream(caps *gst.Caps) bool {
	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstCaps          // out
	var _cret C.gboolean          // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstCaps)(gextras.StructNative(unsafe.Pointer(caps)))

	_cret = C.gst_rtsp_extension_configure_stream(_arg0, _arg1)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(caps)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// The function takes the following parameters:
//
// The function returns the following values:
//
func (ext *RTSPExtension) DetectServer(resp *RTSPMessage) bool {
	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstRTSPMessage   // out
	var _cret C.gboolean          // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(resp)))

	_cret = C.gst_rtsp_extension_detect_server(_arg0, _arg1)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(resp)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// The function takes the following parameters:
//
// The function returns the following values:
//
func (ext *RTSPExtension) ReceiveRequest(req *RTSPMessage) RTSPResult {
	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstRTSPMessage   // out
	var _cret C.GstRTSPResult     // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(req)))

	_cret = C.gst_rtsp_extension_receive_request(_arg0, _arg1)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(req)

	var _rtspResult RTSPResult // out

	_rtspResult = RTSPResult(_cret)

	return _rtspResult
}

// The function takes the following parameters:
//
//    - req
//    - resp
//
// The function returns the following values:
//
func (ext *RTSPExtension) Send(req, resp *RTSPMessage) RTSPResult {
	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstRTSPMessage   // out
	var _arg2 *C.GstRTSPMessage   // out
	var _cret C.GstRTSPResult     // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(req)))
	_arg2 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(resp)))

	_cret = C.gst_rtsp_extension_send(_arg0, _arg1, _arg2)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(req)
	runtime.KeepAlive(resp)

	var _rtspResult RTSPResult // out

	_rtspResult = RTSPResult(_cret)

	return _rtspResult
}

// The function takes the following parameters:
//
// The function returns the following values:
//
func (ext *RTSPExtension) StreamSelect(url *RTSPURL) RTSPResult {
	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstRTSPUrl       // out
	var _cret C.GstRTSPResult     // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstRTSPUrl)(gextras.StructNative(unsafe.Pointer(url)))

	_cret = C.gst_rtsp_extension_stream_select(_arg0, _arg1)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(url)

	var _rtspResult RTSPResult // out

	_rtspResult = RTSPResult(_cret)

	return _rtspResult
}

// The function takes the following parameters:
//
//    - req
//    - resp
//
// The function returns the following values:
//
func (ext *RTSPExtension) afterSend(req, resp *RTSPMessage) RTSPResult {
	gclass := (*C.GstRTSPExtensionInterface)(coreglib.PeekParentClass(ext))
	fnarg := gclass.after_send

	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstRTSPMessage   // out
	var _arg2 *C.GstRTSPMessage   // out
	var _cret C.GstRTSPResult     // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(req)))
	_arg2 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(resp)))

	_cret = C._gotk4_gstrtsp1_RTSPExtension_virtual_after_send(unsafe.Pointer(fnarg), _arg0, _arg1, _arg2)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(req)
	runtime.KeepAlive(resp)

	var _rtspResult RTSPResult // out

	_rtspResult = RTSPResult(_cret)

	return _rtspResult
}

// The function takes the following parameters:
//
// The function returns the following values:
//
func (ext *RTSPExtension) beforeSend(req *RTSPMessage) RTSPResult {
	gclass := (*C.GstRTSPExtensionInterface)(coreglib.PeekParentClass(ext))
	fnarg := gclass.before_send

	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstRTSPMessage   // out
	var _cret C.GstRTSPResult     // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(req)))

	_cret = C._gotk4_gstrtsp1_RTSPExtension_virtual_before_send(unsafe.Pointer(fnarg), _arg0, _arg1)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(req)

	var _rtspResult RTSPResult // out

	_rtspResult = RTSPResult(_cret)

	return _rtspResult
}

// The function takes the following parameters:
//
// The function returns the following values:
//
func (ext *RTSPExtension) configureStream(caps *gst.Caps) bool {
	gclass := (*C.GstRTSPExtensionInterface)(coreglib.PeekParentClass(ext))
	fnarg := gclass.configure_stream

	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstCaps          // out
	var _cret C.gboolean          // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstCaps)(gextras.StructNative(unsafe.Pointer(caps)))

	_cret = C._gotk4_gstrtsp1_RTSPExtension_virtual_configure_stream(unsafe.Pointer(fnarg), _arg0, _arg1)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(caps)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// The function takes the following parameters:
//
// The function returns the following values:
//
func (ext *RTSPExtension) detectServer(resp *RTSPMessage) bool {
	gclass := (*C.GstRTSPExtensionInterface)(coreglib.PeekParentClass(ext))
	fnarg := gclass.detect_server

	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstRTSPMessage   // out
	var _cret C.gboolean          // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(resp)))

	_cret = C._gotk4_gstrtsp1_RTSPExtension_virtual_detect_server(unsafe.Pointer(fnarg), _arg0, _arg1)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(resp)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// The function takes the following parameters:
//
// The function returns the following values:
//
func (ext *RTSPExtension) receiveRequest(req *RTSPMessage) RTSPResult {
	gclass := (*C.GstRTSPExtensionInterface)(coreglib.PeekParentClass(ext))
	fnarg := gclass.receive_request

	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstRTSPMessage   // out
	var _cret C.GstRTSPResult     // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(req)))

	_cret = C._gotk4_gstrtsp1_RTSPExtension_virtual_receive_request(unsafe.Pointer(fnarg), _arg0, _arg1)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(req)

	var _rtspResult RTSPResult // out

	_rtspResult = RTSPResult(_cret)

	return _rtspResult
}

// The function takes the following parameters:
//
//    - req
//    - resp
//
// The function returns the following values:
//
func (ext *RTSPExtension) send(req, resp *RTSPMessage) RTSPResult {
	gclass := (*C.GstRTSPExtensionInterface)(coreglib.PeekParentClass(ext))
	fnarg := gclass.send

	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstRTSPMessage   // out
	var _arg2 *C.GstRTSPMessage   // out
	var _cret C.GstRTSPResult     // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(req)))
	_arg2 = (*C.GstRTSPMessage)(gextras.StructNative(unsafe.Pointer(resp)))

	_cret = C._gotk4_gstrtsp1_RTSPExtension_virtual_send(unsafe.Pointer(fnarg), _arg0, _arg1, _arg2)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(req)
	runtime.KeepAlive(resp)

	var _rtspResult RTSPResult // out

	_rtspResult = RTSPResult(_cret)

	return _rtspResult
}

// The function takes the following parameters:
//
// The function returns the following values:
//
func (ext *RTSPExtension) streamSelect(url *RTSPURL) RTSPResult {
	gclass := (*C.GstRTSPExtensionInterface)(coreglib.PeekParentClass(ext))
	fnarg := gclass.stream_select

	var _arg0 *C.GstRTSPExtension // out
	var _arg1 *C.GstRTSPUrl       // out
	var _cret C.GstRTSPResult     // in

	_arg0 = (*C.GstRTSPExtension)(unsafe.Pointer(coreglib.InternObject(ext).Native()))
	_arg1 = (*C.GstRTSPUrl)(gextras.StructNative(unsafe.Pointer(url)))

	_cret = C._gotk4_gstrtsp1_RTSPExtension_virtual_stream_select(unsafe.Pointer(fnarg), _arg0, _arg1)
	runtime.KeepAlive(ext)
	runtime.KeepAlive(url)

	var _rtspResult RTSPResult // out

	_rtspResult = RTSPResult(_cret)

	return _rtspResult
}

// RTSPExtensionInterface: interface representing RTSP extensions.
//
// An instance of this type is always passed by reference.
type RTSPExtensionInterface struct {
	*rtspExtensionInterface
}

// rtspExtensionInterface is the struct that's finalized.
type rtspExtensionInterface struct {
	native *C.GstRTSPExtensionInterface
}
