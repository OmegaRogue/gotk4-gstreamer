// Code generated by girgen. DO NOT EDIT.

package gst

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <gst/gst.h>
import "C"

// GType values.
var (
	GTypeTracerFactory = coreglib.Type(C.gst_tracer_factory_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeTracerFactory, F: marshalTracerFactory},
	})
}

// TracerFactory: use gst_tracer_factory_get_list() to get a list of tracer
// factories known to GStreamer.
type TracerFactory struct {
	_ [0]func() // equal guard
	PluginFeature
}

var (
	_ PluginFeaturer = (*TracerFactory)(nil)
)

func wrapTracerFactory(obj *coreglib.Object) *TracerFactory {
	return &TracerFactory{
		PluginFeature: PluginFeature{
			GstObject: GstObject{
				InitiallyUnowned: coreglib.InitiallyUnowned{
					Object: obj,
				},
			},
		},
	}
}

func marshalTracerFactory(p uintptr) (interface{}, error) {
	return wrapTracerFactory(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// TracerType: get the #GType for elements managed by this factory. The type can
// only be retrieved if the element factory is loaded, which can be assured with
// gst_plugin_feature_load().
//
// The function returns the following values:
//
//    - gType for tracers managed by this factory or 0 if the factory is not
//      loaded.
//
func (factory *TracerFactory) TracerType() coreglib.Type {
	var _arg0 *C.GstTracerFactory // out
	var _cret C.GType             // in

	_arg0 = (*C.GstTracerFactory)(unsafe.Pointer(coreglib.InternObject(factory).Native()))

	_cret = C.gst_tracer_factory_get_tracer_type(_arg0)
	runtime.KeepAlive(factory)

	var _gType coreglib.Type // out

	_gType = coreglib.Type(_cret)

	return _gType
}

// TracerFactoryGetList gets the list of all registered tracer factories. You
// must free the list using gst_plugin_feature_list_free().
//
// The returned factories are sorted by factory name.
//
// Free-function: gst_plugin_feature_list_free.
//
// The function returns the following values:
//
//    - list of all registered TracerFactory.
//
func TracerFactoryGetList() []*TracerFactory {
	var _cret *C.GList // in

	_cret = C.gst_tracer_factory_get_list()

	var _list []*TracerFactory // out

	_list = make([]*TracerFactory, 0, gextras.ListSize(unsafe.Pointer(_cret)))
	gextras.MoveList(unsafe.Pointer(_cret), true, func(v unsafe.Pointer) {
		src := (*C.GstTracerFactory)(v)
		var dst *TracerFactory // out
		dst = wrapTracerFactory(coreglib.AssumeOwnership(unsafe.Pointer(src)))
		_list = append(_list, dst)
	})

	return _list
}
