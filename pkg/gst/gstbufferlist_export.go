// Code generated by girgen. DO NOT EDIT.

package gst

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gbox"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
)

// #include <stdlib.h>
// #include <gst/gst.h>
import "C"

//export _gotk4_gst1_BufferListFunc
func _gotk4_gst1_BufferListFunc(arg1 **C.GstBuffer, arg2 C.guint, arg3 C.gpointer) (cret C.gboolean) {
	var fn BufferListFunc
	{
		v := gbox.Get(uintptr(arg3))
		if v == nil {
			panic(`callback not found`)
		}
		fn = v.(BufferListFunc)
	}

	var _idx uint // out

	_idx = uint(arg2)

	buffer, ok := fn(_idx)

	var _ *Buffer
	var _ bool

	if buffer != nil {
		*arg1 = (*C.GstBuffer)(gextras.StructNative(unsafe.Pointer(buffer)))
		runtime.SetFinalizer(gextras.StructIntern(unsafe.Pointer(buffer)), nil)
	}
	if ok {
		cret = C.TRUE
	}

	return cret
}
